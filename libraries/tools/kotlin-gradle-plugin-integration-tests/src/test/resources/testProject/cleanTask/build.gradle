import java.io.File
import java.time.*

plugins {
    id "org.jetbrains.kotlin.js" version "<pluginMarkerVersion>"
}

String nodeJsVersion

tasks.create("checkAccessFile") {
    description = "updated access file last modified date"
    dependsOn "build"
    doLast {
        println("check access file existance")
        def accessFile = new File(project.gradle.gradleUserHomeDir, "/nodejs/node-v$nodeJsVersion-darwin-x64-access")
        if (!accessFile.exists()) {
            throw new InvalidUserDataException("Access file was not found")
        }
        println("try to update lastModifiedDate")
        println(accessFile.lastModified())
        def successUpdated = accessFile.setLastModified(LocalDateTime.now().minusDays(35).atZone(ZoneId.systemDefault()).toInstant().toEpochMilli())
        println(accessFile.lastModified())
        if (!successUpdated) {
            throw new InvalidUserDataException("Unable to update last modified date")
        }
    }
}

tasks.create("testCleanTask") {
    description = "check clean task behaviour"
    doLast {
        println("check deletion of access file and folder")
        def accessFile = new File(project.gradle.gradleUserHomeDir, "/nodejs/node-v$nodeJsVersion-darwin-x64-access")
        if (accessFile.exists()) {
            throw new InvalidUserDataException("Access file was not deleted")
        }

        def dependencyDir = new File(project.gradle.gradleUserHomeDir, "/nodejs/node-v$nodeJsVersion-darwin-x64")
        if (dependencyDir.exists()) {
            throw new InvalidUserDataException("Folder was not deleted")
        }
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

afterEvaluate {
    project.kotlinNodeJs.nodeVersion = "10.15.3"
    project.tasks.nodeKotlinClean.dependsOn(checkAccessFile)
    project.tasks.testCleanTask.dependsOn(nodeKotlinClean)
    nodeJsVersion = project.extensions.getByName("kotlinNodeJs").nodeVersion
    println("Node js version: $nodeJsVersion")
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-js"
}

kotlin.target.browser {}